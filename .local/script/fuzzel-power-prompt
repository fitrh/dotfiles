#!/bin/sh -e

main() (
	LOCK="  Lock"
	SUSPEND="󰒲  Suspend"
	HIBERNATE="  Hibernate"
	POWER_OFF="  Poweroff"
	REBOOT="  Reboot"
	LOG_OUT="  Exit"
	OPTIONS="$LOCK\n$SUSPEND\n$HIBERNATE\n$POWER_OFF\n$REBOOT\n$LOG_OUT"

	IFS=. read -r uptime _ </proc/uptime
	SECOND=$((uptime % 60))
	MINUTE=$((uptime / 60 % 60))
	HOUR=$((uptime / 60 / 60 % 24))
	DAY=$((uptime / 60 / 60 / 24))
	[ "$HOUR" -lt 1 ] && [ "$SECOND" -gt 0 ] && UPTIME="$(printf '%02d' $SECOND) seconds"
	[ "$MINUTE" -gt 0 ] && UPTIME="$(printf '%02d' $MINUTE) minutes $UPTIME"
	[ "$HOUR" -gt 0 ] && UPTIME="$(printf '%02d' $HOUR) hours $UPTIME"
	[ "$DAY" -gt 0 ] && UPTIME="$DAY days $UPTIME"

	ACTION=$(printf '%b' "$OPTIONS" |
		fuzzel \
			--prompt "$UPTIME " \
			--no-icons \
			--lines 6 \
			--width 24 \
			--dmenu)
	case "$ACTION" in
		"$POWER_OFF")
			sleep 0.2s

			if [ -z "${SYSTEM_SHUTDOWN_CMD-}" ]; then
				printf "SYSTEM_SHUTDOWN_CMD is not set\n"
				exit 1
			fi

			if ! runnable "$SYSTEM_SHUTDOWN_CMD"; then
				exit 1
			fi
			;;
		"$REBOOT")
			sleep 0.2s

			if [ -z "${SYSTEM_REBOOT_CMD-}" ]; then
				printf "SYSTEM_REBOOT_CMD is not set\n"
				exit 1
			fi

			if ! runnable "$SYSTEM_REBOOT_CMD"; then
				exit 1
			fi
			;;
		"$SUSPEND")
			sleep 0.2s && $SESSION_LOCKER

			if [ -z "${SYSTEM_SUSPEND_CMD-}" ]; then
				printf "SYSTEM_SUSPEND_CMD is not set\n"
				exit 1
			fi

			if ! runnable "$SYSTEM_SUSPEND_CMD"; then
				exit 1
			fi
			;;
		"$HIBERNATE")
			sleep 0.2s && $SESSION_LOCKER

			if [ -z "${SYSTEM_HIBERNATE_CMD-}" ]; then
				printf "SYSTEM_HIBERNATE_CMD is not set\n"
				exit 1
			fi

			if ! runnable "$SYSTEM_HIBERNATE_CMD"; then
				exit 1
			fi
			;;
		"$LOCK")
			sleep 0.2s
			if [ -z "${SESSION_LOCKER-}" ]; then
				printf "SESSION_LOCKER is not set\n"
				exit 1
			fi

			if ! runnable "$SESSION_LOCKER"; then
				exit 1
			fi
			;;
		"$LOG_OUT")
			sleep 0.2s
			if [ -z "${SESSION_EXIT_CMD-}" ]; then
				printf "SESSION_EXIT_CMD is not set\n"
				exit 1
			fi

			if ! runnable "$SESSION_EXIT_CMD"; then
				exit 1
			fi
			;;
	esac
)

runnable() (
	if ! $1; then
		notify-send "fuzzel-power-prompt" "error when running $2"
		printf "error when running %s\n" "$2"
		return 1
	fi

	return 0
)

main "$@"

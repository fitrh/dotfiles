[global]
    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a window manager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern window managers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = mouse

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectively.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "374x5-24+62"
    # geometry = "358x5-24+62"
    # geometry = "358x5-32+70"

    # Turn on the progess bar
    progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    progress_bar_height = 2

    # Set the frame width of the progress bar
    progress_bar_frame_width = 0

    # Set the minimum width for the progress bar
    progress_bar_min_width = 150

    # Set the maximum width for the progress bar
    progress_bar_max_width = 358
    # progress_bar_max_width = 350

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if
    # width is 0.
    shrink = yes

    # The transparency of the window.  Range: [0; 100].
    # This option will only work if a compositing window manager is
    # present (e.g. xcompmgr, compiz, etc.).
    transparency = 20

    # The height of the entire notification.  If the height is smaller
    # than the font height and padding combined, it will be raised
    # to the font height and padding.
    notification_height = 0

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 1

    # Padding between text and separator.
    padding = 24

    # Horizontal padding.
    horizontal_padding = 24

    # Padding between text and icon.
    # Setting this to a non-zero value overwrites any padding that
    # horizontal_padding was adding between the notification text and icon.
    text_icon_padding = 0

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 0

    # Defines color of the frame around the notification window.
    frame_color = "#1a1b26"

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # A client can set the 'transient' hint to bypass this. See the rules
    # section for how to disable this if necessary
    idle_threshold = 120

    ### Text ###

    font = SF Mono 10

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 0

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <https://developer.gnome.org/pango/stable/pango-Markup.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "%a\n<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon.
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = false

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = "end"

    # Ignore newlines '\n' in notifications.
    ignore_newline = false

    # Stack together notifications with the same content
    stack_duplicates = false

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale small icons up to this size, set to 0 to disable. Helpful
    # for e.g. small files or high-dpi screens. In case of conflict,
    # max_icon_size takes precedence over this.
    min_icon_size = 0

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 48

    # Paths to default icons.
    icon_path = /usr/share/icons/Reversal-black-dark/actions/32:/usr/share/icons/Reversal-black-dark/status/32:/usr/share/icons/Reversal-black-dark/status/24:/usr/share/icons/Reversal-black-dark/devices/scalable:/usr/share/icons/Reversal-black-dark/apps/scalable

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = false

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/local/bin/rofi -dmenu

    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox-developer-edition -new-tab

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 6

    # Ignore the dbus closeNotification message.
    # Useful to enforce the timeout set by dunst configuration. Without this
    # parameter, an application may close the notification sent before the
    # user defined timeout.
    ignore_dbusclose = false

    ### Wayland ###
    # These settings are Wayland-specific. They have no effect when using X11

    # Uncomment this if you want to let notications appear under fullscreen
    # applications (default: overlay)
    # layer = top

    # Set this to true to use X11 output on Wayland.
    force_xwayland = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = do_action, close_current
    mouse_middle_click = close_current
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#1a1b26"
    foreground = "#a9b1d6"
    frame_color = "#32344a"
    highlight = "#a9b1d6"
    timeout = 5
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#1a1b26"
    foreground = "#a9b1d6"
    highlight = "#7da6ff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#1a1b26"
    foreground = "#f7768e"
    frame_color = "#f7768e"
    highlight = "#f7768e"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    timeout
#    urgency
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#

[clightctl]
    appname = "clightctl"
    format = "<b>%s\n%b</b>"
    foreground = "#ff9e64"
    frame_color = "#ff9e64"
    highlight = "#ff9e64"
    history_ignore = yes

[clightctl backlight]
    appname = "clightctl backlight"
    format = "<b>%s\n<span foreground='#a9b1d6'>%b</span></b>"
    foreground = "#ff9e64"
    frame_color = "#ff9e64"
    highlight = "#ff9e64"
    history_ignore = yes

[clightctl gamma]
    appname = "clightctl gamma"
    format = "<b><span foreground='#a9b1d6'>%s</span>\n%b</b>"
    foreground = "#ff9e64"
    frame_color = "#ff9e64"
    highlight = "#ff9e64"
    history_ignore = yes

[dunstify]
    appname = "dunstify"
    format = "<b>%s</b>"
    history_ignore = yes

[dwmblocks]
    appname = "dwmblocks"
    history_ignore = yes
    new_icon = NONE

[dwmblocks date]
    appname = "dwmblocks clock handler"
    format = "<b>%b</b>"
    history_ignore = yes
    new_icon = NONE

[dwmblocks daylight mode]
    appname = "dwmblocks power handler daylight"
    format = "<span font='18'>   <b>%s</b></span>"
    foreground = "#32d1ff"
    frame_color = "#32d1ff"
    highlight = "#32d1ff"
    history_ignore = yes
    new_icon = NONE

[dwmblocks network traffic]
    appname = "dwmblocks network traffic"
    format = "Interface   : <b>%s</b>\n%b"
    history_ignore = yes

[dwmblocks network wireless]
    appname = "dwmblocks network wireless"
    format = "<span foreground='#b9f27c'>󰤯 </span> <b>%s</b>\n<span foreground='#bb9af7'>󰢿 </span> <b>%b</b>"
    history_ignore = yes

[dwmblocks night mode]
    appname = "dwmblocks power handler night"
    format = "<span font='18'>    <b>%s</b></span>"
    foreground = "#ff9e64"
    frame_color = "#ff9e64"
    highlight = "#ff9e64"
    history_ignore = yes
    new_icon = NONE

[dwmblocks notification]
    summary = "*"
    script = "dwmblocks-signal-notif"

[dwmblocks power battery]
    appname = "dwmblocks power handler battery"
    format = "<span font='32'>%s</span>"
    foreground = "#e9f5fb"
    frame_color = "#32d1ff"
    highlight = "#32d1ff"
    history_ignore = yes

[dwmblocks power charging]
    appname = "dwmblocks power handler charging"
    format = "<span font='32'>%s</span>"
    foreground = "#ffc38d"
    frame_color = "#ffa53c"
    highlight = "#ffa53c"
    history_ignore = yes

[notify-send]
    appname = "notify-send"
    history_ignore = yes

[scrot]
    appname = "SCROT"
    background = "#1a1b26"
    foreground = "#bb9af7"
    format = "<b>%s</b>\n%b"
    frame_color = "#ad8ee6"
    highlight = "#bb9af7"
    timeout = 5

[starship]
    appname = "starship"
    format = "<b>%s</b>\n%b"
    history_ignore = true

[spotify]
    appname = "Spotify"
    foreground = "#1db954"
    format = "阮 Now Playing\n <b>%s</b>\n <span foreground='#ffffff'>%b</span>"
    frame_color = "#1db954"
    highlight = "#1db954"
    history_ignore = yes
    timeout = 5

[telegram]
    appname = "Telegram Desktop"
    format = "<b>%s</b>\n<span foreground='#a9b1d6'>%b</span>"
    urgency = normal
    foreground = "#1795c6"
    frame_color = "#1795c6"
    highlight = "#1795c6"

[uget]
    appname = "uGet"
    history_ignore =yes

[volume]
    appname = "Audio"
    format = " <span font='32'>%s <span foreground='#a9b1d6'>%b</span>%%</span>"
    foreground = "#0db9d7"
    frame_color = "#0db9d7"
    highlight = "#0db9d7"
    history_ignore = yes
    new_icon = NONE

[volume-high]
    appname = "Audio High"
    format = " <span font='32'>%s <span foreground='#a9b1d6'>%b</span>%%</span>"
    foreground = "#ff7a93"
    frame_color = "#ff7a93"
    highlight = "#ff7a93"
    history_ignore = yes
    new_icon = NONE

[volume-low]
    appname = "Audio Low"
    format = " <span font='32'>%s <span foreground='#a9b1d6'>%b</span>%%</span>"
    foreground = "#a9b1d6"
    frame_color = "#a9b1d6"
    highlight = "#a9b1d6"
    history_ignore = yes
    new_icon = NONE

[volume-mute]
    appname = "Audio Mute"
    format = " <span font='32'>%s %b%%</span>"
    foreground = "#444b6a"
    frame_color = "#444b6a"
    highlight = "#444b6a"
    history_ignore = yes
    new_icon = NONE

# vim: ft=cfg
